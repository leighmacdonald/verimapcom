// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/rpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_EVT_UNKNOWN     EventType = 0
	EventType_EVT_CONNECT     EventType = 1
	EventType_EVT_PING        EventType = 2
	EventType_EVT_PONG        EventType = 3
	EventType_EVT_MESSAGE     EventType = 10
	EventType_EVT_SET_MISSION EventType = 20
	EventType_EVT_ERROR       EventType = 1000
)

var EventType_name = map[int32]string{
	0:    "EVT_UNKNOWN",
	1:    "EVT_CONNECT",
	2:    "EVT_PING",
	3:    "EVT_PONG",
	10:   "EVT_MESSAGE",
	20:   "EVT_SET_MISSION",
	1000: "EVT_ERROR",
}

var EventType_value = map[string]int32{
	"EVT_UNKNOWN":     0,
	"EVT_CONNECT":     1,
	"EVT_PING":        2,
	"EVT_PONG":        3,
	"EVT_MESSAGE":     10,
	"EVT_SET_MISSION": 20,
	"EVT_ERROR":       1000,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{0}
}

type StatusReply_Status int32

const (
	StatusReply_OK    StatusReply_Status = 0
	StatusReply_ERROR StatusReply_Status = 1
)

var StatusReply_Status_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}

var StatusReply_Status_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x StatusReply_Status) String() string {
	return proto.EnumName(StatusReply_Status_name, int32(x))
}

func (StatusReply_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{9, 0}
}

type CreateFlightRequest struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateFlightRequest) Reset()         { *m = CreateFlightRequest{} }
func (m *CreateFlightRequest) String() string { return proto.CompactTextString(m) }
func (*CreateFlightRequest) ProtoMessage()    {}
func (*CreateFlightRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{0}
}

func (m *CreateFlightRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFlightRequest.Unmarshal(m, b)
}
func (m *CreateFlightRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFlightRequest.Marshal(b, m, deterministic)
}
func (m *CreateFlightRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFlightRequest.Merge(m, src)
}
func (m *CreateFlightRequest) XXX_Size() int {
	return xxx_messageInfo_CreateFlightRequest.Size(m)
}
func (m *CreateFlightRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFlightRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFlightRequest proto.InternalMessageInfo

func (m *CreateFlightRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type CreateFlightResponse struct {
	FlightId             int32    `protobuf:"varint,1,opt,name=flight_id,json=flightId,proto3" json:"flight_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateFlightResponse) Reset()         { *m = CreateFlightResponse{} }
func (m *CreateFlightResponse) String() string { return proto.CompactTextString(m) }
func (*CreateFlightResponse) ProtoMessage()    {}
func (*CreateFlightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{1}
}

func (m *CreateFlightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFlightResponse.Unmarshal(m, b)
}
func (m *CreateFlightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFlightResponse.Marshal(b, m, deterministic)
}
func (m *CreateFlightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFlightResponse.Merge(m, src)
}
func (m *CreateFlightResponse) XXX_Size() int {
	return xxx_messageInfo_CreateFlightResponse.Size(m)
}
func (m *CreateFlightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFlightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFlightResponse proto.InternalMessageInfo

func (m *CreateFlightResponse) GetFlightId() int32 {
	if m != nil {
		return m.FlightId
	}
	return 0
}

type MissionReply struct {
	MissionId            int32    `protobuf:"varint,1,opt,name=mission_id,json=missionId,proto3" json:"mission_id,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MissionReply) Reset()         { *m = MissionReply{} }
func (m *MissionReply) String() string { return proto.CompactTextString(m) }
func (*MissionReply) ProtoMessage()    {}
func (*MissionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{2}
}

func (m *MissionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MissionReply.Unmarshal(m, b)
}
func (m *MissionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MissionReply.Marshal(b, m, deterministic)
}
func (m *MissionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MissionReply.Merge(m, src)
}
func (m *MissionReply) XXX_Size() int {
	return xxx_messageInfo_MissionReply.Size(m)
}
func (m *MissionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MissionReply.DiscardUnknown(m)
}

var xxx_messageInfo_MissionReply proto.InternalMessageInfo

func (m *MissionReply) GetMissionId() int32 {
	if m != nil {
		return m.MissionId
	}
	return 0
}

func (m *MissionReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PingRequest struct {
	At                   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=at,proto3" json:"at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{3}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

func (m *PingRequest) GetAt() *timestamp.Timestamp {
	if m != nil {
		return m.At
	}
	return nil
}

type FileUpload struct {
	FileName             string   `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileSize             int64    `protobuf:"varint,2,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileUpload) Reset()         { *m = FileUpload{} }
func (m *FileUpload) String() string { return proto.CompactTextString(m) }
func (*FileUpload) ProtoMessage()    {}
func (*FileUpload) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{4}
}

func (m *FileUpload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileUpload.Unmarshal(m, b)
}
func (m *FileUpload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileUpload.Marshal(b, m, deterministic)
}
func (m *FileUpload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileUpload.Merge(m, src)
}
func (m *FileUpload) XXX_Size() int {
	return xxx_messageInfo_FileUpload.Size(m)
}
func (m *FileUpload) XXX_DiscardUnknown() {
	xxx_messageInfo_FileUpload.DiscardUnknown(m)
}

var xxx_messageInfo_FileUpload proto.InternalMessageInfo

func (m *FileUpload) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileUpload) GetFileSize() int64 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *FileUpload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type FileReply struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileReply) Reset()         { *m = FileReply{} }
func (m *FileReply) String() string { return proto.CompactTextString(m) }
func (*FileReply) ProtoMessage()    {}
func (*FileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{5}
}

func (m *FileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileReply.Unmarshal(m, b)
}
func (m *FileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileReply.Marshal(b, m, deterministic)
}
func (m *FileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileReply.Merge(m, src)
}
func (m *FileReply) XXX_Size() int {
	return xxx_messageInfo_FileReply.Size(m)
}
func (m *FileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FileReply.DiscardUnknown(m)
}

var xxx_messageInfo_FileReply proto.InternalMessageInfo

func (m *FileReply) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type Location struct {
	Lat                  float64  `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon                  float64  `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{6}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Location) GetLon() float64 {
	if m != nil {
		return m.Lon
	}
	return 0
}

type PositionEvent struct {
	At                   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=at,proto3" json:"at,omitempty"`
	Id                   int32                `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Location             *Location            `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Elevation            int32                `protobuf:"varint,4,opt,name=elevation,proto3" json:"elevation,omitempty"`
	FlightId             int32                `protobuf:"varint,5,opt,name=flight_id,json=flightId,proto3" json:"flight_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PositionEvent) Reset()         { *m = PositionEvent{} }
func (m *PositionEvent) String() string { return proto.CompactTextString(m) }
func (*PositionEvent) ProtoMessage()    {}
func (*PositionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{7}
}

func (m *PositionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionEvent.Unmarshal(m, b)
}
func (m *PositionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionEvent.Marshal(b, m, deterministic)
}
func (m *PositionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionEvent.Merge(m, src)
}
func (m *PositionEvent) XXX_Size() int {
	return xxx_messageInfo_PositionEvent.Size(m)
}
func (m *PositionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_PositionEvent proto.InternalMessageInfo

func (m *PositionEvent) GetAt() *timestamp.Timestamp {
	if m != nil {
		return m.At
	}
	return nil
}

func (m *PositionEvent) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PositionEvent) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *PositionEvent) GetElevation() int32 {
	if m != nil {
		return m.Elevation
	}
	return 0
}

func (m *PositionEvent) GetFlightId() int32 {
	if m != nil {
		return m.FlightId
	}
	return 0
}

type HotSpotEvent struct {
	At                   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=at,proto3" json:"at,omitempty"`
	Id                   int32                `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Location             *Location            `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Delta                int32                `protobuf:"varint,4,opt,name=delta,proto3" json:"delta,omitempty"`
	FlightId             int32                `protobuf:"varint,5,opt,name=flight_id,json=flightId,proto3" json:"flight_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HotSpotEvent) Reset()         { *m = HotSpotEvent{} }
func (m *HotSpotEvent) String() string { return proto.CompactTextString(m) }
func (*HotSpotEvent) ProtoMessage()    {}
func (*HotSpotEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{8}
}

func (m *HotSpotEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HotSpotEvent.Unmarshal(m, b)
}
func (m *HotSpotEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HotSpotEvent.Marshal(b, m, deterministic)
}
func (m *HotSpotEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HotSpotEvent.Merge(m, src)
}
func (m *HotSpotEvent) XXX_Size() int {
	return xxx_messageInfo_HotSpotEvent.Size(m)
}
func (m *HotSpotEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_HotSpotEvent.DiscardUnknown(m)
}

var xxx_messageInfo_HotSpotEvent proto.InternalMessageInfo

func (m *HotSpotEvent) GetAt() *timestamp.Timestamp {
	if m != nil {
		return m.At
	}
	return nil
}

func (m *HotSpotEvent) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HotSpotEvent) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *HotSpotEvent) GetDelta() int32 {
	if m != nil {
		return m.Delta
	}
	return 0
}

func (m *HotSpotEvent) GetFlightId() int32 {
	if m != nil {
		return m.FlightId
	}
	return 0
}

type StatusReply struct {
	Status               StatusReply_Status `protobuf:"varint,1,opt,name=status,proto3,enum=StatusReply_Status" json:"status,omitempty"`
	Message              string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StatusReply) Reset()         { *m = StatusReply{} }
func (m *StatusReply) String() string { return proto.CompactTextString(m) }
func (*StatusReply) ProtoMessage()    {}
func (*StatusReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{9}
}

func (m *StatusReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusReply.Unmarshal(m, b)
}
func (m *StatusReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusReply.Marshal(b, m, deterministic)
}
func (m *StatusReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusReply.Merge(m, src)
}
func (m *StatusReply) XXX_Size() int {
	return xxx_messageInfo_StatusReply.Size(m)
}
func (m *StatusReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusReply.DiscardUnknown(m)
}

var xxx_messageInfo_StatusReply proto.InternalMessageInfo

func (m *StatusReply) GetStatus() StatusReply_Status {
	if m != nil {
		return m.Status
	}
	return StatusReply_OK
}

func (m *StatusReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ChatMessageRequest struct {
	Message              string               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	At                   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=at,proto3" json:"at,omitempty"`
	StartIdx             int32                `protobuf:"varint,3,opt,name=start_idx,json=startIdx,proto3" json:"start_idx,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ChatMessageRequest) Reset()         { *m = ChatMessageRequest{} }
func (m *ChatMessageRequest) String() string { return proto.CompactTextString(m) }
func (*ChatMessageRequest) ProtoMessage()    {}
func (*ChatMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{10}
}

func (m *ChatMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessageRequest.Unmarshal(m, b)
}
func (m *ChatMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessageRequest.Marshal(b, m, deterministic)
}
func (m *ChatMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessageRequest.Merge(m, src)
}
func (m *ChatMessageRequest) XXX_Size() int {
	return xxx_messageInfo_ChatMessageRequest.Size(m)
}
func (m *ChatMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessageRequest proto.InternalMessageInfo

func (m *ChatMessageRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ChatMessageRequest) GetAt() *timestamp.Timestamp {
	if m != nil {
		return m.At
	}
	return nil
}

func (m *ChatMessageRequest) GetStartIdx() int32 {
	if m != nil {
		return m.StartIdx
	}
	return 0
}

type MissionEvent struct {
	EventType            EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=EventType" json:"event_type,omitempty"`
	Payload              *any.Any  `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MissionEvent) Reset()         { *m = MissionEvent{} }
func (m *MissionEvent) String() string { return proto.CompactTextString(m) }
func (*MissionEvent) ProtoMessage()    {}
func (*MissionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{11}
}

func (m *MissionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MissionEvent.Unmarshal(m, b)
}
func (m *MissionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MissionEvent.Marshal(b, m, deterministic)
}
func (m *MissionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MissionEvent.Merge(m, src)
}
func (m *MissionEvent) XXX_Size() int {
	return xxx_messageInfo_MissionEvent.Size(m)
}
func (m *MissionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MissionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MissionEvent proto.InternalMessageInfo

func (m *MissionEvent) GetEventType() EventType {
	if m != nil {
		return m.EventType
	}
	return EventType_EVT_UNKNOWN
}

func (m *MissionEvent) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

type MissionRequest struct {
	MissionId            int32    `protobuf:"varint,1,opt,name=mission_id,json=missionId,proto3" json:"mission_id,omitempty"`
	StartIdx             int32    `protobuf:"varint,2,opt,name=start_idx,json=startIdx,proto3" json:"start_idx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MissionRequest) Reset()         { *m = MissionRequest{} }
func (m *MissionRequest) String() string { return proto.CompactTextString(m) }
func (*MissionRequest) ProtoMessage()    {}
func (*MissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{12}
}

func (m *MissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MissionRequest.Unmarshal(m, b)
}
func (m *MissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MissionRequest.Marshal(b, m, deterministic)
}
func (m *MissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MissionRequest.Merge(m, src)
}
func (m *MissionRequest) XXX_Size() int {
	return xxx_messageInfo_MissionRequest.Size(m)
}
func (m *MissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MissionRequest proto.InternalMessageInfo

func (m *MissionRequest) GetMissionId() int32 {
	if m != nil {
		return m.MissionId
	}
	return 0
}

func (m *MissionRequest) GetStartIdx() int32 {
	if m != nil {
		return m.StartIdx
	}
	return 0
}

type CreateMissionRequest struct {
	Name                 int32    `protobuf:"varint,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMissionRequest) Reset()         { *m = CreateMissionRequest{} }
func (m *CreateMissionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMissionRequest) ProtoMessage()    {}
func (*CreateMissionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cea3ef5dc9ae365, []int{13}
}

func (m *CreateMissionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMissionRequest.Unmarshal(m, b)
}
func (m *CreateMissionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMissionRequest.Marshal(b, m, deterministic)
}
func (m *CreateMissionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMissionRequest.Merge(m, src)
}
func (m *CreateMissionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMissionRequest.Size(m)
}
func (m *CreateMissionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMissionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMissionRequest proto.InternalMessageInfo

func (m *CreateMissionRequest) GetName() int32 {
	if m != nil {
		return m.Name
	}
	return 0
}

func init() {
	proto.RegisterEnum("EventType", EventType_name, EventType_value)
	proto.RegisterEnum("StatusReply_Status", StatusReply_Status_name, StatusReply_Status_value)
	proto.RegisterType((*CreateFlightRequest)(nil), "CreateFlightRequest")
	proto.RegisterType((*CreateFlightResponse)(nil), "CreateFlightResponse")
	proto.RegisterType((*MissionReply)(nil), "MissionReply")
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*FileUpload)(nil), "FileUpload")
	proto.RegisterType((*FileReply)(nil), "FileReply")
	proto.RegisterType((*Location)(nil), "Location")
	proto.RegisterType((*PositionEvent)(nil), "PositionEvent")
	proto.RegisterType((*HotSpotEvent)(nil), "HotSpotEvent")
	proto.RegisterType((*StatusReply)(nil), "StatusReply")
	proto.RegisterType((*ChatMessageRequest)(nil), "ChatMessageRequest")
	proto.RegisterType((*MissionEvent)(nil), "MissionEvent")
	proto.RegisterType((*MissionRequest)(nil), "MissionRequest")
	proto.RegisterType((*CreateMissionRequest)(nil), "CreateMissionRequest")
}

func init() {
	proto.RegisterFile("pb/rpc.proto", fileDescriptor_3cea3ef5dc9ae365)
}

var fileDescriptor_3cea3ef5dc9ae365 = []byte{
	// 858 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xdd, 0x6e, 0xdb, 0x36,
	0x14, 0xb6, 0x64, 0x3b, 0xb1, 0x8e, 0x5d, 0x47, 0xa5, 0xdd, 0x21, 0x75, 0x36, 0x2c, 0xd0, 0x30,
	0x20, 0xcd, 0x00, 0x66, 0x48, 0x30, 0x74, 0x7f, 0xc0, 0x90, 0x19, 0x6e, 0x6a, 0xb4, 0x91, 0x03,
	0xca, 0xdd, 0x80, 0xde, 0x18, 0x4c, 0xc4, 0xba, 0x04, 0x64, 0x49, 0x35, 0x99, 0xae, 0xee, 0xcd,
	0x5e, 0x66, 0xb7, 0x7b, 0x91, 0x3d, 0xc9, 0x1e, 0x63, 0x20, 0x45, 0xc9, 0x92, 0xeb, 0x76, 0xdb,
	0x4d, 0xef, 0xc8, 0x8f, 0xe7, 0x3b, 0xfa, 0xbe, 0x73, 0x78, 0x28, 0xe8, 0xa4, 0xd7, 0x27, 0xcb,
	0xf4, 0x06, 0xa7, 0xcb, 0x44, 0x26, 0x83, 0xcf, 0xe7, 0x49, 0x32, 0x8f, 0xd8, 0x89, 0xde, 0x5d,
	0xdf, 0xbe, 0x38, 0x91, 0x7c, 0xc1, 0x84, 0xa4, 0x8b, 0xd4, 0x04, 0xdc, 0xdf, 0x0c, 0xa0, 0xf1,
	0x2a, 0x3b, 0xf2, 0x1e, 0x42, 0x6f, 0xb8, 0x64, 0x54, 0xb2, 0x47, 0x11, 0x9f, 0xbf, 0x94, 0x84,
	0xbd, 0xba, 0x65, 0x42, 0xa2, 0x43, 0x68, 0x87, 0x4c, 0xdc, 0x2c, 0x79, 0x2a, 0x79, 0x12, 0xef,
	0x5b, 0x87, 0xd6, 0x91, 0x43, 0xca, 0x90, 0x77, 0x06, 0xfd, 0x2a, 0x51, 0xa4, 0x49, 0x2c, 0x18,
	0x3a, 0x00, 0xe7, 0x85, 0x46, 0x66, 0x3c, 0xd4, 0xbc, 0x26, 0x69, 0x65, 0xc0, 0x38, 0xf4, 0x2e,
	0xa0, 0x73, 0xc9, 0x85, 0xe0, 0x49, 0x4c, 0x58, 0x1a, 0xad, 0xd0, 0x67, 0x00, 0x8b, 0x6c, 0xbf,
	0x8e, 0x76, 0x0c, 0x32, 0x0e, 0xd1, 0x3e, 0xec, 0x2e, 0x98, 0x10, 0x74, 0xce, 0xf6, 0x6d, 0xad,
	0x20, 0xdf, 0x7a, 0xdf, 0x41, 0xfb, 0x8a, 0xc7, 0xf3, 0x5c, 0xee, 0x31, 0xd8, 0x54, 0x6a, 0x7e,
	0xfb, 0x74, 0x80, 0x33, 0xb7, 0x38, 0x77, 0x8b, 0xa7, 0x79, 0x39, 0x88, 0x4d, 0xa5, 0xf7, 0x1c,
	0xe0, 0x11, 0x8f, 0xd8, 0xb3, 0x34, 0x4a, 0x68, 0xa8, 0xe5, 0xf2, 0x88, 0xcd, 0x62, 0xba, 0x60,
	0xc6, 0x66, 0x4b, 0x01, 0x3e, 0x5d, 0xb0, 0xe2, 0x50, 0xf0, 0xb7, 0x99, 0x82, 0x7a, 0x76, 0x18,
	0xf0, 0xb7, 0x0c, 0x21, 0x68, 0x84, 0x54, 0xd2, 0xfd, 0xfa, 0xa1, 0x75, 0xd4, 0x21, 0x7a, 0xed,
	0x7d, 0x01, 0x8e, 0xca, 0x9d, 0x99, 0xfb, 0x04, 0x76, 0x84, 0xa4, 0xf2, 0x56, 0x18, 0x63, 0x66,
	0xe7, 0x61, 0x68, 0x3d, 0x4d, 0x6e, 0xa8, 0xaa, 0x22, 0x72, 0xa1, 0x1e, 0x19, 0xe5, 0x16, 0x51,
	0x4b, 0x8d, 0x24, 0xb1, 0xfe, 0x9a, 0x42, 0x92, 0xd8, 0xfb, 0xd3, 0x82, 0x3b, 0x57, 0x89, 0xe0,
	0x8a, 0x30, 0x7a, 0xcd, 0xe2, 0xff, 0x65, 0x17, 0x75, 0xc1, 0xe6, 0xa1, 0x4e, 0xd7, 0x24, 0x36,
	0x0f, 0xd1, 0x97, 0xd0, 0x8a, 0xcc, 0xd7, 0xb5, 0xf4, 0xf6, 0xa9, 0x83, 0x73, 0x39, 0xa4, 0x38,
	0x42, 0x9f, 0x82, 0xc3, 0x22, 0xf6, 0x3a, 0x8b, 0x6b, 0x64, 0x8d, 0x29, 0x80, 0x6a, 0x93, 0x9b,
	0x1b, 0x4d, 0xfe, 0xc3, 0x82, 0xce, 0xe3, 0x44, 0x06, 0x69, 0x22, 0x3f, 0x9a, 0xdc, 0x3e, 0x34,
	0x43, 0x16, 0x49, 0x6a, 0xa4, 0x66, 0x9b, 0x0f, 0xcb, 0x7c, 0x05, 0xed, 0x40, 0x37, 0x24, 0xeb,
	0xd6, 0x57, 0x95, 0x6e, 0x75, 0x4f, 0x7b, 0xb8, 0x74, 0x9a, 0xaf, 0x4d, 0xc8, 0x07, 0x2e, 0xe6,
	0x01, 0xec, 0x64, 0xb1, 0x68, 0x07, 0xec, 0xc9, 0x13, 0xb7, 0x86, 0x1c, 0x68, 0x8e, 0x08, 0x99,
	0x10, 0xd7, 0xf2, 0x7e, 0x03, 0x34, 0x7c, 0x49, 0xe5, 0x65, 0x16, 0x9b, 0x5f, 0xde, 0x52, 0x32,
	0xab, 0x92, 0xcc, 0x14, 0xce, 0xfe, 0x4f, 0x85, 0x3b, 0x00, 0x47, 0x48, 0xba, 0x54, 0x56, 0xdf,
	0xe8, 0x4a, 0x35, 0x49, 0x4b, 0x03, 0xe3, 0xf0, 0x8d, 0xc7, 0x8b, 0xb9, 0xcb, 0x3a, 0xf2, 0x00,
	0x80, 0xa9, 0xc5, 0x4c, 0xae, 0x52, 0x66, 0x0c, 0x03, 0xd6, 0x67, 0xd3, 0x55, 0xca, 0x88, 0xc3,
	0xf2, 0x25, 0xc2, 0xb0, 0x9b, 0xd2, 0x95, 0x9a, 0x15, 0x23, 0xa4, 0xff, 0x8e, 0x90, 0xf3, 0x78,
	0x45, 0xf2, 0x20, 0xef, 0x29, 0x74, 0x8b, 0x11, 0xcf, 0xfc, 0xfd, 0xcb, 0x90, 0x57, 0x84, 0xdb,
	0x1b, 0xc2, 0x8f, 0xf3, 0x57, 0x66, 0x23, 0x27, 0x82, 0x46, 0x31, 0xb1, 0x4d, 0xa2, 0xd7, 0xc7,
	0xbf, 0x83, 0x53, 0x38, 0x40, 0x7b, 0xd0, 0x1e, 0xfd, 0x32, 0x9d, 0x3d, 0xf3, 0x9f, 0xf8, 0x93,
	0x5f, 0x7d, 0xb7, 0x96, 0x03, 0xc3, 0x89, 0xef, 0x8f, 0x86, 0x53, 0xd7, 0x42, 0x1d, 0x68, 0x29,
	0xe0, 0x6a, 0xec, 0x5f, 0xb8, 0x76, 0xb1, 0x9b, 0xf8, 0x17, 0x6e, 0x3d, 0x0f, 0xbe, 0x1c, 0x05,
	0xc1, 0xf9, 0xc5, 0xc8, 0x05, 0xd4, 0x83, 0x3d, 0x05, 0x04, 0xa3, 0xe9, 0xec, 0x72, 0x1c, 0x04,
	0xe3, 0x89, 0xef, 0xf6, 0x51, 0x17, 0x1c, 0x05, 0x66, 0xdd, 0xfd, 0x7b, 0xf7, 0xf4, 0xaf, 0x06,
	0xd4, 0xc9, 0xd5, 0x10, 0xfd, 0x04, 0xf7, 0x87, 0x11, 0x67, 0xb1, 0x0c, 0xe4, 0x92, 0xd1, 0x45,
	0xb9, 0xf2, 0x02, 0xed, 0xe1, 0xaa, 0x95, 0xc1, 0x1d, 0x5c, 0x0e, 0xf0, 0x6a, 0x5f, 0x5b, 0xe8,
	0x47, 0xb8, 0x57, 0x4e, 0x90, 0x0f, 0xff, 0x16, 0x72, 0x17, 0x57, 0x5e, 0x06, 0xcd, 0xfe, 0x1e,
	0xfa, 0x65, 0xb6, 0x19, 0xc5, 0xad, 0x5f, 0x2e, 0x8f, 0xa9, 0xe6, 0x7e, 0x0b, 0x77, 0x0d, 0x97,
	0xc5, 0xa1, 0xb9, 0xa7, 0xa8, 0x87, 0xdf, 0xbd, 0xb5, 0x83, 0x4e, 0x79, 0x3e, 0xbc, 0x1a, 0x7a,
	0x00, 0x9d, 0x60, 0x15, 0xdf, 0x28, 0x9e, 0x7a, 0x02, 0x51, 0x1b, 0xaf, 0x5f, 0xd9, 0x01, 0xe0,
	0xe2, 0x59, 0xf4, 0x6a, 0xe8, 0x21, 0xf4, 0x54, 0xe8, 0x38, 0x16, 0x6c, 0x29, 0xd7, 0xe6, 0x36,
	0xbc, 0x6c, 0x7e, 0xe1, 0xc8, 0x42, 0xdf, 0x00, 0x5a, 0x13, 0x1f, 0x27, 0x52, 0x68, 0x5f, 0x55,
	0x1b, 0x5b, 0x68, 0xe7, 0xe0, 0x2a, 0x5a, 0xf9, 0x77, 0x85, 0xfa, 0x78, 0xcb, 0x6f, 0x6f, 0x70,
	0x0f, 0x6f, 0xfb, 0xa7, 0x79, 0x35, 0xf4, 0x03, 0xdc, 0x5d, 0xa7, 0x30, 0x65, 0x44, 0x79, 0xf4,
	0xfb, 0x1a, 0x9a, 0xfb, 0x3d, 0x83, 0x3d, 0x45, 0x9e, 0xa4, 0x2c, 0xce, 0xa9, 0xef, 0xbf, 0x05,
	0x86, 0xf4, 0x73, 0xe3, 0xb9, 0x9d, 0x5e, 0x5f, 0xef, 0xe8, 0x21, 0x3b, 0xfb, 0x27, 0x00, 0x00,
	0xff, 0xff, 0xa7, 0xcf, 0x67, 0xd3, 0xf1, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RPCClient is the client API for RPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCClient interface {
	// --- Clients data stream egress
	ClientStreamMissionEvents(ctx context.Context, in *MissionRequest, opts ...grpc.CallOption) (RPC_ClientStreamMissionEventsClient, error)
	ClientStreamPositions(ctx context.Context, in *MissionRequest, opts ...grpc.CallOption) (RPC_ClientStreamPositionsClient, error)
	ClientStreamHotSpots(ctx context.Context, in *MissionRequest, opts ...grpc.CallOption) (RPC_ClientStreamHotSpotsClient, error)
	ClientSendMessage(ctx context.Context, in *ChatMessageRequest, opts ...grpc.CallOption) (*StatusReply, error)
	// --- Server data ingress
	SyncSendFile(ctx context.Context, in *FileUpload, opts ...grpc.CallOption) (*FileReply, error)
	SyncInsertPositions(ctx context.Context, opts ...grpc.CallOption) (RPC_SyncInsertPositionsClient, error)
	SyncInsertHotspots(ctx context.Context, opts ...grpc.CallOption) (RPC_SyncInsertHotspotsClient, error)
	SyncCreateFlight(ctx context.Context, in *CreateFlightRequest, opts ...grpc.CallOption) (*CreateFlightResponse, error)
	// Create a new unique instance of a mission
	SyncCreateMission(ctx context.Context, in *CreateMissionRequest, opts ...grpc.CallOption) (*MissionReply, error)
	// Open the mission to check for its existence or get metadata
	SyncOpenMission(ctx context.Context, in *MissionRequest, opts ...grpc.CallOption) (*MissionReply, error)
}

type rPCClient struct {
	cc grpc.ClientConnInterface
}

func NewRPCClient(cc grpc.ClientConnInterface) RPCClient {
	return &rPCClient{cc}
}

func (c *rPCClient) ClientStreamMissionEvents(ctx context.Context, in *MissionRequest, opts ...grpc.CallOption) (RPC_ClientStreamMissionEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[0], "/RPC/ClientStreamMissionEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCClientStreamMissionEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPC_ClientStreamMissionEventsClient interface {
	Recv() (*MissionEvent, error)
	grpc.ClientStream
}

type rPCClientStreamMissionEventsClient struct {
	grpc.ClientStream
}

func (x *rPCClientStreamMissionEventsClient) Recv() (*MissionEvent, error) {
	m := new(MissionEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) ClientStreamPositions(ctx context.Context, in *MissionRequest, opts ...grpc.CallOption) (RPC_ClientStreamPositionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[1], "/RPC/ClientStreamPositions", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCClientStreamPositionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPC_ClientStreamPositionsClient interface {
	Recv() (*PositionEvent, error)
	grpc.ClientStream
}

type rPCClientStreamPositionsClient struct {
	grpc.ClientStream
}

func (x *rPCClientStreamPositionsClient) Recv() (*PositionEvent, error) {
	m := new(PositionEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) ClientStreamHotSpots(ctx context.Context, in *MissionRequest, opts ...grpc.CallOption) (RPC_ClientStreamHotSpotsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[2], "/RPC/ClientStreamHotSpots", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCClientStreamHotSpotsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RPC_ClientStreamHotSpotsClient interface {
	Recv() (*HotSpotEvent, error)
	grpc.ClientStream
}

type rPCClientStreamHotSpotsClient struct {
	grpc.ClientStream
}

func (x *rPCClientStreamHotSpotsClient) Recv() (*HotSpotEvent, error) {
	m := new(HotSpotEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) ClientSendMessage(ctx context.Context, in *ChatMessageRequest, opts ...grpc.CallOption) (*StatusReply, error) {
	out := new(StatusReply)
	err := c.cc.Invoke(ctx, "/RPC/ClientSendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) SyncSendFile(ctx context.Context, in *FileUpload, opts ...grpc.CallOption) (*FileReply, error) {
	out := new(FileReply)
	err := c.cc.Invoke(ctx, "/RPC/SyncSendFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) SyncInsertPositions(ctx context.Context, opts ...grpc.CallOption) (RPC_SyncInsertPositionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[3], "/RPC/SyncInsertPositions", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCSyncInsertPositionsClient{stream}
	return x, nil
}

type RPC_SyncInsertPositionsClient interface {
	Send(*PositionEvent) error
	CloseAndRecv() (*StatusReply, error)
	grpc.ClientStream
}

type rPCSyncInsertPositionsClient struct {
	grpc.ClientStream
}

func (x *rPCSyncInsertPositionsClient) Send(m *PositionEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rPCSyncInsertPositionsClient) CloseAndRecv() (*StatusReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StatusReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) SyncInsertHotspots(ctx context.Context, opts ...grpc.CallOption) (RPC_SyncInsertHotspotsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RPC_serviceDesc.Streams[4], "/RPC/SyncInsertHotspots", opts...)
	if err != nil {
		return nil, err
	}
	x := &rPCSyncInsertHotspotsClient{stream}
	return x, nil
}

type RPC_SyncInsertHotspotsClient interface {
	Send(*HotSpotEvent) error
	CloseAndRecv() (*StatusReply, error)
	grpc.ClientStream
}

type rPCSyncInsertHotspotsClient struct {
	grpc.ClientStream
}

func (x *rPCSyncInsertHotspotsClient) Send(m *HotSpotEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *rPCSyncInsertHotspotsClient) CloseAndRecv() (*StatusReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(StatusReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rPCClient) SyncCreateFlight(ctx context.Context, in *CreateFlightRequest, opts ...grpc.CallOption) (*CreateFlightResponse, error) {
	out := new(CreateFlightResponse)
	err := c.cc.Invoke(ctx, "/RPC/SyncCreateFlight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) SyncCreateMission(ctx context.Context, in *CreateMissionRequest, opts ...grpc.CallOption) (*MissionReply, error) {
	out := new(MissionReply)
	err := c.cc.Invoke(ctx, "/RPC/SyncCreateMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) SyncOpenMission(ctx context.Context, in *MissionRequest, opts ...grpc.CallOption) (*MissionReply, error) {
	out := new(MissionReply)
	err := c.cc.Invoke(ctx, "/RPC/SyncOpenMission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCServer is the server API for RPC service.
type RPCServer interface {
	// --- Clients data stream egress
	ClientStreamMissionEvents(*MissionRequest, RPC_ClientStreamMissionEventsServer) error
	ClientStreamPositions(*MissionRequest, RPC_ClientStreamPositionsServer) error
	ClientStreamHotSpots(*MissionRequest, RPC_ClientStreamHotSpotsServer) error
	ClientSendMessage(context.Context, *ChatMessageRequest) (*StatusReply, error)
	// --- Server data ingress
	SyncSendFile(context.Context, *FileUpload) (*FileReply, error)
	SyncInsertPositions(RPC_SyncInsertPositionsServer) error
	SyncInsertHotspots(RPC_SyncInsertHotspotsServer) error
	SyncCreateFlight(context.Context, *CreateFlightRequest) (*CreateFlightResponse, error)
	// Create a new unique instance of a mission
	SyncCreateMission(context.Context, *CreateMissionRequest) (*MissionReply, error)
	// Open the mission to check for its existence or get metadata
	SyncOpenMission(context.Context, *MissionRequest) (*MissionReply, error)
}

// UnimplementedRPCServer can be embedded to have forward compatible implementations.
type UnimplementedRPCServer struct {
}

func (*UnimplementedRPCServer) ClientStreamMissionEvents(req *MissionRequest, srv RPC_ClientStreamMissionEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method ClientStreamMissionEvents not implemented")
}
func (*UnimplementedRPCServer) ClientStreamPositions(req *MissionRequest, srv RPC_ClientStreamPositionsServer) error {
	return status.Errorf(codes.Unimplemented, "method ClientStreamPositions not implemented")
}
func (*UnimplementedRPCServer) ClientStreamHotSpots(req *MissionRequest, srv RPC_ClientStreamHotSpotsServer) error {
	return status.Errorf(codes.Unimplemented, "method ClientStreamHotSpots not implemented")
}
func (*UnimplementedRPCServer) ClientSendMessage(ctx context.Context, req *ChatMessageRequest) (*StatusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientSendMessage not implemented")
}
func (*UnimplementedRPCServer) SyncSendFile(ctx context.Context, req *FileUpload) (*FileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncSendFile not implemented")
}
func (*UnimplementedRPCServer) SyncInsertPositions(srv RPC_SyncInsertPositionsServer) error {
	return status.Errorf(codes.Unimplemented, "method SyncInsertPositions not implemented")
}
func (*UnimplementedRPCServer) SyncInsertHotspots(srv RPC_SyncInsertHotspotsServer) error {
	return status.Errorf(codes.Unimplemented, "method SyncInsertHotspots not implemented")
}
func (*UnimplementedRPCServer) SyncCreateFlight(ctx context.Context, req *CreateFlightRequest) (*CreateFlightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncCreateFlight not implemented")
}
func (*UnimplementedRPCServer) SyncCreateMission(ctx context.Context, req *CreateMissionRequest) (*MissionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncCreateMission not implemented")
}
func (*UnimplementedRPCServer) SyncOpenMission(ctx context.Context, req *MissionRequest) (*MissionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SyncOpenMission not implemented")
}

func RegisterRPCServer(s *grpc.Server, srv RPCServer) {
	s.RegisterService(&_RPC_serviceDesc, srv)
}

func _RPC_ClientStreamMissionEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MissionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServer).ClientStreamMissionEvents(m, &rPCClientStreamMissionEventsServer{stream})
}

type RPC_ClientStreamMissionEventsServer interface {
	Send(*MissionEvent) error
	grpc.ServerStream
}

type rPCClientStreamMissionEventsServer struct {
	grpc.ServerStream
}

func (x *rPCClientStreamMissionEventsServer) Send(m *MissionEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _RPC_ClientStreamPositions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MissionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServer).ClientStreamPositions(m, &rPCClientStreamPositionsServer{stream})
}

type RPC_ClientStreamPositionsServer interface {
	Send(*PositionEvent) error
	grpc.ServerStream
}

type rPCClientStreamPositionsServer struct {
	grpc.ServerStream
}

func (x *rPCClientStreamPositionsServer) Send(m *PositionEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _RPC_ClientStreamHotSpots_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MissionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RPCServer).ClientStreamHotSpots(m, &rPCClientStreamHotSpotsServer{stream})
}

type RPC_ClientStreamHotSpotsServer interface {
	Send(*HotSpotEvent) error
	grpc.ServerStream
}

type rPCClientStreamHotSpotsServer struct {
	grpc.ServerStream
}

func (x *rPCClientStreamHotSpotsServer) Send(m *HotSpotEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _RPC_ClientSendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).ClientSendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC/ClientSendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).ClientSendMessage(ctx, req.(*ChatMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_SyncSendFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileUpload)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).SyncSendFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC/SyncSendFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).SyncSendFile(ctx, req.(*FileUpload))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_SyncInsertPositions_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RPCServer).SyncInsertPositions(&rPCSyncInsertPositionsServer{stream})
}

type RPC_SyncInsertPositionsServer interface {
	SendAndClose(*StatusReply) error
	Recv() (*PositionEvent, error)
	grpc.ServerStream
}

type rPCSyncInsertPositionsServer struct {
	grpc.ServerStream
}

func (x *rPCSyncInsertPositionsServer) SendAndClose(m *StatusReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rPCSyncInsertPositionsServer) Recv() (*PositionEvent, error) {
	m := new(PositionEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RPC_SyncInsertHotspots_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(RPCServer).SyncInsertHotspots(&rPCSyncInsertHotspotsServer{stream})
}

type RPC_SyncInsertHotspotsServer interface {
	SendAndClose(*StatusReply) error
	Recv() (*HotSpotEvent, error)
	grpc.ServerStream
}

type rPCSyncInsertHotspotsServer struct {
	grpc.ServerStream
}

func (x *rPCSyncInsertHotspotsServer) SendAndClose(m *StatusReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *rPCSyncInsertHotspotsServer) Recv() (*HotSpotEvent, error) {
	m := new(HotSpotEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _RPC_SyncCreateFlight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFlightRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).SyncCreateFlight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC/SyncCreateFlight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).SyncCreateFlight(ctx, req.(*CreateFlightRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_SyncCreateMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).SyncCreateMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC/SyncCreateMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).SyncCreateMission(ctx, req.(*CreateMissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_SyncOpenMission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MissionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).SyncOpenMission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RPC/SyncOpenMission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).SyncOpenMission(ctx, req.(*MissionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RPC",
	HandlerType: (*RPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ClientSendMessage",
			Handler:    _RPC_ClientSendMessage_Handler,
		},
		{
			MethodName: "SyncSendFile",
			Handler:    _RPC_SyncSendFile_Handler,
		},
		{
			MethodName: "SyncCreateFlight",
			Handler:    _RPC_SyncCreateFlight_Handler,
		},
		{
			MethodName: "SyncCreateMission",
			Handler:    _RPC_SyncCreateMission_Handler,
		},
		{
			MethodName: "SyncOpenMission",
			Handler:    _RPC_SyncOpenMission_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ClientStreamMissionEvents",
			Handler:       _RPC_ClientStreamMissionEvents_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ClientStreamPositions",
			Handler:       _RPC_ClientStreamPositions_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ClientStreamHotSpots",
			Handler:       _RPC_ClientStreamHotSpots_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SyncInsertPositions",
			Handler:       _RPC_SyncInsertPositions_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "SyncInsertHotspots",
			Handler:       _RPC_SyncInsertHotspots_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "pb/rpc.proto",
}
